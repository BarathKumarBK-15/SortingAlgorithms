[{"/home/barathkumar/Documents/ReactJS/sortingalgorithms/src/index.js":"1","/home/barathkumar/Documents/ReactJS/sortingalgorithms/src/App.js":"2","/home/barathkumar/Documents/ReactJS/sortingalgorithms/src/reportWebVitals.js":"3","/home/barathkumar/Documents/ReactJS/sortingalgorithms/src/SortingVisualizer/SortingVisualizer.jsx":"4","/home/barathkumar/Documents/ReactJS/sortingalgorithms/src/SortingVisualizer/SortingAlgorithms/SortingAlgorithms.js":"5"},{"size":500,"mtime":1606987858652,"results":"6","hashOfConfig":"7"},{"size":289,"mtime":1606988889450,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1606987858652,"results":"9","hashOfConfig":"7"},{"size":4636,"mtime":1607768658222,"results":"10","hashOfConfig":"7"},{"size":4595,"mtime":1607447060876,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"t20yid",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"/home/barathkumar/Documents/ReactJS/sortingalgorithms/src/index.js",[],["26","27"],"/home/barathkumar/Documents/ReactJS/sortingalgorithms/src/App.js",["28"],"import React from 'react';\nimport logo from './logo.svg';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","/home/barathkumar/Documents/ReactJS/sortingalgorithms/src/reportWebVitals.js",[],"/home/barathkumar/Documents/ReactJS/sortingalgorithms/src/SortingVisualizer/SortingVisualizer.jsx",[],"/home/barathkumar/Documents/ReactJS/sortingalgorithms/src/SortingVisualizer/SortingAlgorithms/SortingAlgorithms.js",["29","30"],"export function getMergeSortAnimations(array)\n{\n    const animations=[];\n    if(array.length<=1)\n    {\n        return array;\n    }\n    const temp=array.slice();\n    mergesort(array,0,array.length,temp,animations);\n    return animations;\n}\n\nfunction mergesort(array,start,end,temp,animations)\n{\n    if(end-start===1)\n    {\n        return;\n    }\n    const middle=Math.floor((start+end)/2);\n    mergesort(temp,start,middle,array,animations);\n    mergesort(temp,middle,end,array,animations);\n    let x=start;\n    let y=middle;\n    let z=start;\n    while(x<middle && y<end)\n    {\n        if(temp[x]<temp[y])\n        {\n            animations.push([z,temp[x]]);\n            array[z++]=temp[x++];\n        }\n        else\n        {\n            animations.push([z,temp[y]]);\n            array[z++]=temp[y++];\n        }\n    }\n    while(x!=middle)\n    {\n        animations.push([z,temp[x]])\n        array[z++]=temp[x++];\n    }\n    while(y!=end)\n    {\n        animations.push([z,temp[y]])\n        array[z++]=temp[y++];\n    }\n}\n\nexport function getBubbleSortAnimations(array)\n{\n    const animations=[];\n    for(let i=0;i<array.length;i++)\n    {\n        for(let j=0;j<array.length-i-1;j++)\n        {\n            if(array[j]>array[j+1])\n            {\n                const temp=array[j];\n                array[j]=array[j+1];\n                array[j+1]=temp;\n                animations.push([j,array[j]]);\n                animations.push([j+1,array[j+1]]);\n            }\n        }\n    }\n    return animations;\n}\n\nexport function getInsertionSortAniamtions(array)\n{\n    const animations=[];\n    for(let i=1;i<array.length;i++)\n    {\n        for(let j=i;j>0;j--)\n        {\n            if(array[j]<array[j-1])\n            {\n                const temp=array[j];\n                array[j]=array[j-1];\n                array[j-1]=temp;\n                animations.push([j,array[j]]);\n                animations.push([j-1,array[j-1]]);\n            }\n            else\n            {\n                break;\n            }\n        }\n    }\n    return animations;\n}\n\nexport function getSelectionSortAnimations(array)\n{\n    const animations=[];\n    for(let i=0;i<array.length-1;i++)\n    {\n        var minind=i;\n        for(let j=i+1;j<array.length;j++)\n        {\n            if(array[j]<array[minind])\n            {\n                minind=j;\n            }\n        }\n        if(minind!==i)\n        {\n            const temp=array[i];\n            array[i]=array[minind];\n            array[minind]=temp;\n            animations.push([i,array[i]]);\n            animations.push([minind,array[minind]]);\n        }\n    }\n    return animations;\n}\n\nexport function getHeapSortAniamtions(array)\n{\n    const animations=[];\n    var l=array.length;\n    var lim=parseInt(l/2-1);\n    for(let i=lim;i>=0;i--)\n    {\n        heapify(array,l,i,animations);\n        //console.log(i);\n    }\n    heapsort(array,animations,l);\n    return animations;\n}\n\nfunction heapsort(array,animations,l)\n{\n    for(let i=l-1;i>=0;i--)\n    {\n        var temp=array[i];\n        array[i]=array[0];\n        array[0]=temp;\n        animations.push([i,array[i]]);\n        animations.push([0,array[0]]);\n        heapify(array,i,0,animations);\n    }\n}\n\nfunction heapify(array,l,i,animations)\n{\n    //console.log(animations.length);\n    var largest=i;\n    var left=2*i+1;\n    var right=2*i+2;\n\n    if(left<l && array[left]>array[largest])\n    {\n        largest=left;\n    }\n    if(right<l && array[right]>array[largest])\n    {\n        largest=right;\n    }\n\n    if(largest!==i)\n    {\n        var temp=array[i];\n        array[i]=array[largest];\n        array[largest]=temp;\n        animations.push([largest,array[largest]]);\n        animations.push([i,array[i]]);\n        heapify(array,l,largest,animations);\n    }\n}\n\nexport function getQuickSortAniamtions(array)\n{\n    const animations=[];\n    var l=array.length;\n    quicksort(array,0,l-1,animations);\n    return animations;\n}\n\nfunction quicksort(array,start,end,animations)\n{\n    if(start>=end)\n    {\n        return;\n    }\n    var pivot=array[end];\n    var insert=start;\n    for(let i=start;i<end;i++)\n    {\n        if(array[i]<pivot)\n        {\n            var temp=array[i];\n            array[i]=array[insert];\n            array[insert]=temp;\n            animations.push([i,array[i]]);\n            animations.push([insert,array[insert]]);\n            insert++;\n        }\n    }\n    var t=array[insert];\n    array[insert]=array[end];\n    array[end]=t;\n    animations.push([end,array[end]]);\n    animations.push([insert,array[insert]]);\n    quicksort(array,start,insert-1,animations);\n    quicksort(array,insert+1,end,animations);\n}",["31","32"],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":2,"column":8,"nodeType":"39","messageId":"40","endLine":2,"endColumn":12},{"ruleId":"41","severity":1,"message":"42","line":38,"column":12,"nodeType":"43","messageId":"44","endLine":38,"endColumn":14},{"ruleId":"41","severity":1,"message":"42","line":43,"column":12,"nodeType":"43","messageId":"44","endLine":43,"endColumn":14},{"ruleId":"33","replacedBy":"45"},{"ruleId":"35","replacedBy":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["47"],["48"],"no-global-assign","no-unsafe-negation"]